# Staging environment values for SOC Platform

global:
  environment: staging
  domain: staging.soc-platform.com
  tls:
    enabled: true
    issuer: letsencrypt-staging
  
  # Resource constraints for staging
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

# Service-specific configurations
authService:
  replicaCount: 2
  env:
    - name: NODE_ENV
      value: "staging"
    - name: LOG_LEVEL
      value: "debug"
    - name: ENABLE_DEBUG_ENDPOINTS
      value: "true"
  
clientService:
  replicaCount: 2
  
policyService:
  replicaCount: 2

controlService:
  replicaCount: 2

evidenceService:
  replicaCount: 2
  storage:
    size: 50Gi

workflowService:
  replicaCount: 2

reportingService:
  replicaCount: 2

auditService:
  replicaCount: 2

integrationService:
  replicaCount: 1

notificationService:
  replicaCount: 1
  email:
    provider: "maildev"
    host: "maildev.staging.svc.cluster.local"
    port: 1025

aiService:
  replicaCount: 1
  enableMockMode: true

# Infrastructure components
postgresql:
  enabled: true
  auth:
    postgresPassword: "staging-changeme"
    username: soc_staging_user
    password: "staging-changeme"
  primary:
    persistence:
      size: 20Gi
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1Gi

redis:
  enabled: true
  auth:
    enabled: true
    password: "staging-redis-changeme"
  master:
    persistence:
      size: 5Gi
    resources:
      requests:
        cpu: 100m
        memory: 128Mi

mongodb:
  enabled: true
  auth:
    enabled: true
    rootPassword: "staging-mongo-changeme"
  persistence:
    size: 10Gi

elasticsearch:
  enabled: true
  replicas: 1
  minimumMasterNodes: 1
  resources:
    requests:
      cpu: 500m
      memory: 1Gi

kafka:
  enabled: true
  replicaCount: 1
  zookeeper:
    replicaCount: 1

# Monitoring
monitoring:
  enabled: true
  prometheus:
    retention: 7d
    storage: 10Gi
  grafana:
    adminPassword: "staging-grafana-changeme"
  alerts:
    enabled: false  # Disable critical alerts in staging

# Kong API Gateway
kong:
  enabled: true
  proxy:
    type: LoadBalancer
  env:
    database: "postgres"
    pg_host: "postgresql.staging.svc.cluster.local"
    pg_password: "staging-changeme"
  
# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: staging.api.soc-platform.com
      paths:
        - path: /
          pathType: Prefix
    - host: staging.soc-platform.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: staging-tls-secret
      hosts:
        - staging.api.soc-platform.com
        - staging.soc-platform.com

# Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Feature flags
features:
  enableDebugMode: true
  enableMockIntegrations: true
  enableTestEndpoints: true
  rateLimit:
    enabled: true
    requestsPerMinute: 1000