src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(113,7): error TS2353: Object literal may only specify known properties, and 'sourceFrameworkId' does not exist in type 'CreateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(175,40): error TS2353: Object literal may only specify known properties, and 'sourceFrameworkId' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(184,40): error TS2353: Object literal may only specify known properties, and 'targetFrameworkId' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(193,40): error TS2353: Object literal may only specify known properties, and 'isApproved' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(202,40): error TS2353: Object literal may only specify known properties, and 'mappingType' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(211,40): error TS2353: Object literal may only specify known properties, and 'minConfidence' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(220,40): error TS2353: Object literal may only specify known properties, and 'includeStats' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(244,21): error TS2339: Property 'meta' does not exist on type '{ data: ComplianceMapping[]; total: number; page: number; limit: number; }'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(245,21): error TS2339: Property 'meta' does not exist on type '{ data: ComplianceMapping[]; total: number; page: number; limit: number; }'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(272,74): error TS2554: Expected 1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(281,71): error TS2554: Expected 1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(289,7): error TS2353: Object literal may only specify known properties, and 'mappings' does not exist in type 'UpdateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(353,11): error TS2353: Object literal may only specify known properties, and 'sourceControlId' does not exist in type 'CreateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(359,11): error TS2353: Object literal may only specify known properties, and 'sourceControlId' does not exist in type 'CreateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(403,23): error TS2339: Property 'results' does not exist on type '{ success: number; failed: number; errors: any[]; }'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(481,69): error TS2554: Expected 0-1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(528,70): error TS2554: Expected 1-2 arguments, but got 3.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(569,21): error TS2339: Property 'errors' does not exist on type '{ valid: boolean; issues: string[]; }'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(589,46): error TS2345: Argument of type '{ sourceFrameworkId: string; targetFrameworkId: string; format: string; }' is not assignable to parameter of type 'string'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(606,31): error TS2345: Argument of type '{ format: string; }' is not assignable to parameter of type 'string'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(643,46): error TS2345: Argument of type '{ sourceFramework: string; targetFramework: string; mappings: { sourceControlId: string; targetControlId: string; mappingType: string; confidence: number; }[]; }' is not assignable to parameter of type '{ data: string; format: string; }'.
  Type '{ sourceFramework: string; targetFramework: string; mappings: { sourceControlId: string; targetControlId: string; mappingType: string; confidence: number; }[]; }' is missing the following properties from type '{ data: string; format: string; }': data, format
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(702,65): error TS2554: Expected 0-1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(752,52): error TS2554: Expected 0 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(778,39): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(804,39): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(806,21): error TS2339: Property 'failed' does not exist on type 'void'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(807,21): error TS2339: Property 'results' does not exist on type 'void'.
src/modules/compliance/__tests__/compliance-mapping.controller.spec.ts(829,39): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(196,7): error TS2353: Object literal may only specify known properties, and 'sourceFrameworkId' does not exist in type 'CreateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(248,28): error TS2339: Property 'indexMapping' does not exist on type 'SearchService'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(296,26): error TS2339: Property 'mappings' does not exist on type 'CreateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(346,40): error TS2353: Object literal may only specify known properties, and 'sourceFrameworkId' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(357,40): error TS2353: Object literal may only specify known properties, and 'targetFrameworkId' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(368,40): error TS2353: Object literal may only specify known properties, and 'isApproved' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(378,40): error TS2353: Object literal may only specify known properties, and 'mappingType' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(388,40): error TS2353: Object literal may only specify known properties, and 'minConfidence' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(399,40): error TS2353: Object literal may only specify known properties, and 'includeStats' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(406,21): error TS2339: Property 'meta' does not exist on type '{ data: ComplianceMapping[]; total: number; page: number; limit: number; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(407,21): error TS2339: Property 'meta' does not exist on type '{ data: ComplianceMapping[]; total: number; page: number; limit: number; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(408,21): error TS2339: Property 'meta' does not exist on type '{ data: ComplianceMapping[]; total: number; page: number; limit: number; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(409,21): error TS2339: Property 'meta' does not exist on type '{ data: ComplianceMapping[]; total: number; page: number; limit: number; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(414,9): error TS2353: Object literal may only specify known properties, and 'sortBy' does not exist in type 'QueryMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(466,71): error TS2554: Expected 1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(487,60): error TS2554: Expected 1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(506,68): error TS2554: Expected 1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(514,7): error TS2353: Object literal may only specify known properties, and 'mappings' does not exist in type 'UpdateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(536,28): error TS2339: Property 'indexMapping' does not exist on type 'SearchService'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(585,28): error TS2339: Property 'removeMapping' does not exist on type 'SearchService'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(607,11): error TS2353: Object literal may only specify known properties, and 'sourceControlId' does not exist in type 'CreateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(613,11): error TS2353: Object literal may only specify known properties, and 'sourceControlId' does not exist in type 'CreateMappingDto'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(630,47): error TS2345: Argument of type 'BulkMappingDto' is not assignable to parameter of type 'CreateMappingDto[]'.
  Type 'BulkMappingDto' is missing the following properties from type 'CreateMappingDto[]': length, pop, push, concat, and 29 more.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(647,47): error TS2345: Argument of type 'BulkMappingDto' is not assignable to parameter of type 'CreateMappingDto[]'.
  Type 'BulkMappingDto' is missing the following properties from type 'CreateMappingDto[]': length, pop, push, concat, and 29 more.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(649,21): error TS2339: Property 'created' does not exist on type '{ success: number; failed: number; errors: any[]; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(651,21): error TS2339: Property 'results' does not exist on type '{ success: number; failed: number; errors: any[]; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(652,21): error TS2339: Property 'results' does not exist on type '{ success: number; failed: number; errors: any[]; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(666,47): error TS2345: Argument of type 'BulkMappingDto' is not assignable to parameter of type 'CreateMappingDto[]'.
  Type 'BulkMappingDto' is missing the following properties from type 'CreateMappingDto[]': length, pop, push, concat, and 29 more.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(669,21): error TS2339: Property 'created' does not exist on type '{ success: number; failed: number; errors: any[]; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(704,73): error TS2554: Expected 0-1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(736,73): error TS2554: Expected 0-1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(765,21): error TS2339: Property 'suggestions' does not exist on type 'any[]'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(781,92): error TS2554: Expected 1-2 arguments, but got 3.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(783,21): error TS2339: Property 'suggestions' does not exist on type 'any[]'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(813,21): error TS2339: Property 'errors' does not exist on type '{ valid: boolean; issues: string[]; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(831,21): error TS2339: Property 'errors' does not exist on type '{ valid: boolean; issues: string[]; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(842,51): error TS2345: Argument of type '{ sourceFrameworkId: string; targetFrameworkId: string; format: string; }' is not assignable to parameter of type 'string'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(859,51): error TS2345: Argument of type '{ format: string; }' is not assignable to parameter of type 'string'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(889,36): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(907,36): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(909,21): error TS2339: Property 'updated' does not exist on type '{ imported: number; errors: any[]; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(916,28): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(940,69): error TS2554: Expected 0-1 arguments, but got 2.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(971,56): error TS2554: Expected 0 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(988,56): error TS2554: Expected 0 arguments, but got 1.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(1004,9): error TS2554: Expected 2 arguments, but got 3.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(1023,80): error TS2345: Argument of type 'string' is not assignable to parameter of type '{ approvedBy: string; comments?: string; }'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(1025,21): error TS2339: Property 'approved' does not exist on type 'void'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(1026,21): error TS2339: Property 'failed' does not exist on type 'void'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(1027,21): error TS2339: Property 'results' does not exist on type 'void'.
src/modules/compliance/__tests__/compliance-mapping.service.spec.ts(1044,9): error TS2554: Expected 2 arguments, but got 3.
src/modules/compliance/__tests__/controls.controller.spec.ts(7,33): error TS2305: Module '"../dto"' has no exported member 'QueryControlDto'.
src/modules/compliance/__tests__/controls.controller.spec.ts(11,3): error TS2305: Module '"../entities/control.entity"' has no exported member 'ControlStatus'.
src/modules/compliance/__tests__/controls.controller.spec.ts(125,11): error TS2741: Property 'identifier' is missing in type '{ controlId: string; title: string; description: string; type: ControlType.PREVENTIVE; priority: ControlPriority.HIGH; frequency: ControlFrequency.CONTINUOUS; frameworkId: string; category: string; }' but required in type 'CreateControlDto'.
src/modules/compliance/__tests__/controls.controller.spec.ts(140,39): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.controller.spec.ts(151,31): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.controller.spec.ts(159,31): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.controller.spec.ts(284,21): error TS2339: Property 'meta' does not exist on type '{ items: Control[]; total: number; }'.
src/modules/compliance/__tests__/controls.controller.spec.ts(285,21): error TS2339: Property 'meta' does not exist on type '{ items: Control[]; total: number; }'.
src/modules/compliance/__tests__/controls.controller.spec.ts(310,39): error TS2339: Property 'findByControlId' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(313,22): error TS2339: Property 'findByControlId' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(319,24): error TS2339: Property 'findByControlId' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(321,22): error TS2339: Property 'findByControlId' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(336,39): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/controls.controller.spec.ts(348,20): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/controls.controller.spec.ts(355,31): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/controls.controller.spec.ts(363,24): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.controller.spec.ts(373,31): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.controller.spec.ts(410,39): error TS2339: Property 'getStatistics' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(413,22): error TS2339: Property 'getControlStatistics' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(444,39): error TS2551: Property 'getImplementationStatus' does not exist on type 'ControlsController'. Did you mean 'updateImplementationStatus'?
src/modules/compliance/__tests__/controls.controller.spec.ts(447,22): error TS2551: Property 'getImplementationStatus' does not exist on type 'ControlsService'. Did you mean 'updateImplementationStatus'?
src/modules/compliance/__tests__/controls.controller.spec.ts(486,39): error TS2339: Property 'getTestResults' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(489,22): error TS2339: Property 'getControlTestResults' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(511,39): error TS2339: Property 'scheduleTest' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(514,22): error TS2339: Property 'scheduleTest' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(537,39): error TS2339: Property 'recordTestResult' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(540,22): error TS2339: Property 'recordTestResult' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(553,20): error TS2339: Property 'recordTestResult' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(585,39): error TS2339: Property 'getEvidence' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(588,22): error TS2339: Property 'getControlEvidence' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(608,39): error TS2339: Property 'attachEvidence' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(611,22): error TS2339: Property 'attachEvidence' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(619,39): error TS2339: Property 'removeEvidence' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(622,22): error TS2339: Property 'removeEvidence' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(646,39): error TS2339: Property 'bulkUpdate' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(649,22): error TS2339: Property 'bulkOperation' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(671,39): error TS2339: Property 'bulkUpdate' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(693,39): error TS2339: Property 'export' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(696,22): error TS2339: Property 'exportControls' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(726,39): error TS2339: Property 'import' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(729,22): error TS2551: Property 'importControls' does not exist on type 'ControlsService'. Did you mean 'bulkImportControls'?
src/modules/compliance/__tests__/controls.controller.spec.ts(741,31): error TS2339: Property 'import' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(756,39): error TS2339: Property 'validateControl' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(759,22): error TS2339: Property 'validateControl' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(772,39): error TS2339: Property 'validateControl' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(811,39): error TS2339: Property 'getControlGaps' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(814,22): error TS2339: Property 'getControlGaps' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(860,39): error TS2339: Property 'getRiskAssessment' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(863,22): error TS2339: Property 'getControlRiskAssessment' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(872,24): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.controller.spec.ts(881,24): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/controls.controller.spec.ts(890,24): error TS2339: Property 'recordTestResult' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(892,22): error TS2339: Property 'recordTestResult' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.controller.spec.ts(923,31): error TS2339: Property 'scheduleTest' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.controller.spec.ts(939,20): error TS2339: Property 'attachEvidence' does not exist on type 'ControlsController'.
src/modules/compliance/__tests__/controls.service.spec.ts(9,33): error TS2305: Module '"../dto"' has no exported member 'QueryControlDto'.
src/modules/compliance/__tests__/controls.service.spec.ts(221,7): error TS2322: Type 'ControlFrequency.CONTINUOUS' is not assignable to type 'ControlFrequency'.
src/modules/compliance/__tests__/controls.service.spec.ts(241,36): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.service.spec.ts(251,39): error TS2339: Property 'organizationId' does not exist on type '{ id: string; identifier: string; }'.
src/modules/compliance/__tests__/controls.service.spec.ts(267,28): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.service.spec.ts(275,28): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.service.spec.ts(287,21): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.service.spec.ts(417,21): error TS2339: Property 'meta' does not exist on type '{ items: Control[]; total: number; }'.
src/modules/compliance/__tests__/controls.service.spec.ts(418,21): error TS2339: Property 'meta' does not exist on type '{ items: Control[]; total: number; }'.
src/modules/compliance/__tests__/controls.service.spec.ts(419,21): error TS2339: Property 'meta' does not exist on type '{ items: Control[]; total: number; }'.
src/modules/compliance/__tests__/controls.service.spec.ts(420,21): error TS2339: Property 'meta' does not exist on type '{ items: Control[]; total: number; }'.
src/modules/compliance/__tests__/controls.service.spec.ts(421,21): error TS2339: Property 'meta' does not exist on type '{ items: Control[]; total: number; }'.
src/modules/compliance/__tests__/controls.service.spec.ts(464,36): error TS2339: Property 'findByControlId' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(476,28): error TS2339: Property 'findByControlId' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(493,36): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/controls.service.spec.ts(513,17): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/controls.service.spec.ts(521,21): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/controls.service.spec.ts(535,21): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.service.spec.ts(542,28): error TS2339: Property 'removeControl' does not exist on type 'SearchService'.
src/modules/compliance/__tests__/controls.service.spec.ts(557,28): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/controls.service.spec.ts(578,36): error TS2339: Property 'getControlStatistics' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(604,36): error TS2551: Property 'getImplementationStatus' does not exist on type 'ControlsService'. Did you mean 'updateImplementationStatus'?
src/modules/compliance/__tests__/controls.service.spec.ts(639,36): error TS2339: Property 'getControlTestResults' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(668,36): error TS2339: Property 'scheduleTest' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(690,28): error TS2339: Property 'scheduleTest' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(710,36): error TS2339: Property 'recordTestResult' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(746,36): error TS2339: Property 'getControlEvidence' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(774,36): error TS2339: Property 'attachEvidence' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(805,36): error TS2339: Property 'removeEvidence' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(815,28): error TS2339: Property 'removeEvidence' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(835,36): error TS2339: Property 'bulkOperation' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(861,36): error TS2339: Property 'bulkOperation' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(881,36): error TS2339: Property 'exportControls' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(916,36): error TS2551: Property 'importControls' does not exist on type 'ControlsService'. Did you mean 'bulkImportControls'?
src/modules/compliance/__tests__/controls.service.spec.ts(947,36): error TS2551: Property 'importControls' does not exist on type 'ControlsService'. Did you mean 'bulkImportControls'?
src/modules/compliance/__tests__/controls.service.spec.ts(958,36): error TS2339: Property 'validateControl' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(975,36): error TS2339: Property 'validateControl' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(999,36): error TS2339: Property 'getControlGaps' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(1013,36): error TS2339: Property 'getControlRiskAssessment' does not exist on type 'ControlsService'.
src/modules/compliance/__tests__/controls.service.spec.ts(1043,36): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(5,35): error TS2305: Module '"../dto"' has no exported member 'QueryFrameworkDto'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(108,7): error TS2353: Object literal may only specify known properties, and 'requirements' does not exist in type 'CreateFrameworkDto'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(122,39): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(133,31): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(143,31): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(212,21): error TS2339: Property 'meta' does not exist on type '{ items: ComplianceFramework[]; total: number; }'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(256,7): error TS2353: Object literal may only specify known properties, and 'requirements' does not exist in type 'UpdateFrameworkDto'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(271,39): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(282,31): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(290,31): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(298,24): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(308,31): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(443,39): error TS2339: Property 'getCoverageReport' does not exist on type 'FrameworksController'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(446,22): error TS2339: Property 'getCoverageReport' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(471,39): error TS2339: Property 'getComplianceScore' does not exist on type 'FrameworksController'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(474,22): error TS2339: Property 'getComplianceScore' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(488,39): error TS2339: Property 'validateFramework' does not exist on type 'FrameworksController'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(491,22): error TS2339: Property 'validateFramework' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(503,39): error TS2339: Property 'validateFramework' does not exist on type 'FrameworksController'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(547,39): error TS2339: Property 'getImplementationGuide' does not exist on type 'FrameworksController'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(550,22): error TS2339: Property 'getImplementationGuide' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(559,24): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(568,24): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/frameworks.controller.spec.ts(600,31): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.service.spec.ts(8,35): error TS2305: Module '"../dto"' has no exported member 'QueryFrameworkDto'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(162,7): error TS2353: Object literal may only specify known properties, and 'requirements' does not exist in type 'CreateFrameworkDto'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(187,36): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.service.spec.ts(208,28): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.service.spec.ts(222,21): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.service.spec.ts(239,21): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.service.spec.ts(348,21): error TS2339: Property 'meta' does not exist on type '{ items: ComplianceFramework[]; total: number; }'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(446,36): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/frameworks.service.spec.ts(462,28): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/frameworks.service.spec.ts(471,17): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/frameworks.service.spec.ts(481,21): error TS2554: Expected 3 arguments, but got 2.
src/modules/compliance/__tests__/frameworks.service.spec.ts(497,21): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.service.spec.ts(504,28): error TS2339: Property 'removeFramework' does not exist on type 'SearchService'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(516,28): error TS2554: Expected 2 arguments, but got 1.
src/modules/compliance/__tests__/frameworks.service.spec.ts(530,36): error TS2339: Property 'getFrameworkStatistics' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(588,36): error TS2339: Property 'getCoverageReport' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(609,36): error TS2339: Property 'getComplianceScore' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(627,36): error TS2339: Property 'validateFramework' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(645,36): error TS2339: Property 'validateFramework' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(660,36): error TS2339: Property 'getImplementationGuide' does not exist on type 'FrameworksService'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(700,21): error TS2339: Property 'mappings' does not exist on type 'any[]'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(701,21): error TS2339: Property 'mappings' does not exist on type 'any[]'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(702,21): error TS2339: Property 'mappings' does not exist on type 'any[]'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(703,21): error TS2339: Property 'mappings' does not exist on type 'any[]'.
src/modules/compliance/__tests__/frameworks.service.spec.ts(796,36): error TS2554: Expected 2 arguments, but got 1.
src/modules/events/__tests__/kafka-consumer.mock-service.spec.ts(60,21): error TS2445: Property 'handleControlImplemented' is protected and only accessible within class 'KafkaConsumerService' and its subclasses.
src/modules/events/__tests__/kafka-consumer.mock-service.spec.ts(75,21): error TS2445: Property 'handleControlFailed' is protected and only accessible within class 'KafkaConsumerService' and its subclasses.
src/modules/events/__tests__/kafka-consumer.mock-service.spec.ts(91,21): error TS2445: Property 'handleControlTested' is protected and only accessible within class 'KafkaConsumerService' and its subclasses.
src/modules/events/__tests__/kafka-consumer.mock-service.spec.ts(106,21): error TS2445: Property 'handleEvidenceCollected' is protected and only accessible within class 'KafkaConsumerService' and its subclasses.
src/modules/events/__tests__/kafka-consumer.mock-service.spec.ts(121,21): error TS2445: Property 'handleRiskIdentified' is protected and only accessible within class 'KafkaConsumerService' and its subclasses.
src/modules/events/__tests__/kafka-consumer.mock-service.spec.ts(136,21): error TS2445: Property 'handlePolicyUpdated' is protected and only accessible within class 'KafkaConsumerService' and its subclasses.
src/modules/events/__tests__/kafka-consumer.mock-service.spec.ts(180,21): error TS2445: Property 'handleControlFailed' is protected and only accessible within class 'KafkaConsumerService' and its subclasses.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(160,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(193,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(211,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(222,54): error TS2339: Property 'EFFECTIVE' does not exist on type 'typeof ImplementationStatus'.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(243,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(263,56): error TS2339: Property 'NOT_EFFECTIVE' does not exist on type 'typeof ImplementationStatus'.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(282,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(313,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(327,56): error TS2339: Property 'EFFECTIVE' does not exist on type 'typeof ImplementationStatus'.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(351,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(356,56): error TS2339: Property 'PARTIALLY_EFFECTIVE' does not exist on type 'typeof ImplementationStatus'.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(380,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(388,56): error TS2339: Property 'NOT_EFFECTIVE' does not exist on type 'typeof ImplementationStatus'.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(415,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(453,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(490,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(518,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(549,38): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(572,40): error TS2345: Argument of type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is not assignable to parameter of type 'EachMessagePayload'.
  Type '{ topic: string; partition: number; message: { value: Buffer<ArrayBuffer>; key: any; timestamp: string; headers: {}; offset: string; }; }' is missing the following properties from type 'EachMessagePayload': heartbeat, pause
src/modules/events/__tests__/kafka-consumer.service.spec.ts(601,36): error TS2304: Cannot find name 'createMockMessage'.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(617,36): error TS2304: Cannot find name 'createMockMessage'.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(644,36): error TS2304: Cannot find name 'createMockMessage'.
src/modules/events/__tests__/kafka-consumer.service.spec.ts(675,38): error TS2304: Cannot find name 'createMockMessage'.
src/modules/opa/__tests__/opa.service.spec.ts(74,5): error TS2741: Property 'headers' is missing in type '{}' but required in type 'InternalAxiosRequestConfig<any>'.
src/modules/opa/__tests__/opa.service.spec.ts(114,36): error TS2339: Property 'deployPolicy' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(141,28): error TS2339: Property 'deployPolicy' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(151,28): error TS2339: Property 'deployPolicy' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(223,36): error TS2339: Property 'removePolicy' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(246,28): error TS2339: Property 'removePolicy' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(261,36): error TS2339: Property 'listPolicies' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(279,36): error TS2339: Property 'listPolicies' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(332,36): error TS2339: Property 'evaluateBatch' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(352,36): error TS2339: Property 'evaluateBatch' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(368,36): error TS2551: Property 'validatePolicy' does not exist on type 'OpaService'. Did you mean 'evaluatePolicy'?
src/modules/opa/__tests__/opa.service.spec.ts(391,36): error TS2551: Property 'validatePolicy' does not exist on type 'OpaService'. Did you mean 'evaluatePolicy'?
src/modules/opa/__tests__/opa.service.spec.ts(430,36): error TS2339: Property 'updateData' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(445,36): error TS2339: Property 'checkHealth' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(461,36): error TS2339: Property 'checkHealth' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(475,36): error TS2551: Property 'compilePolicyToWasm' does not exist on type 'OpaService'. Did you mean 'compilePolicy'?
src/modules/opa/__tests__/opa.service.spec.ts(496,36): error TS2339: Property 'getMetrics' does not exist on type 'OpaService'.
src/modules/opa/__tests__/opa.service.spec.ts(518,36): error TS2339: Property 'getDecisionLogs' does not exist on type 'OpaService'.
src/modules/policies/__tests__/policies.controller.spec.ts(122,7): error TS2322: Type 'Date' is not assignable to type 'string'.
src/modules/policies/__tests__/policies.controller.spec.ts(242,9): error TS2322: Type 'Date' is not assignable to type 'string'.
src/modules/policies/__tests__/policies.controller.spec.ts(243,9): error TS2322: Type 'Date' is not assignable to type 'string'.
src/modules/policies/__tests__/policies.controller.spec.ts(637,43): error TS2339: Property 'id' does not exist on type '{ user: { id: string; email: string; roles: string[]; organizationId: string; }; }'.
src/modules/policies/__tests__/policies.controller.spec.ts(663,13): error TS2741: Property 'ownerName' is missing in type '{ complianceMapping: { frameworks: string[]; controls: string[]; }; id: string; policyNumber: string; title: string; description: string; type: PolicyType; status: PolicyStatus; ... 17 more ...; updatedAt: Date; }' but required in type 'CreatePolicyDto'.
src/modules/policies/__tests__/policies.controller.spec.ts(682,13): error TS2741: Property 'ownerName' is missing in type '{ content: { sections: { title: string; content: string; }[]; }; id: string; policyNumber: string; title: string; description: string; type: PolicyType; status: PolicyStatus; ... 17 more ...; updatedAt: Date; }' but required in type 'CreatePolicyDto'.
src/modules/policies/__tests__/policies.integration.spec.ts(57,5): error TS2322: Type 'Date' is not assignable to type 'string'.
src/modules/policies/__tests__/policies.integration.spec.ts(58,5): error TS2322: Type 'Date' is not assignable to type 'string'.
src/modules/policies/__tests__/policies.integration.spec.ts(59,5): error TS2322: Type 'Date' is not assignable to type 'string'.
src/modules/policies/__tests__/policies.integration.spec.ts(198,23): error TS2554: Expected 10 arguments, but got 2.
src/modules/policies/__tests__/policies.integration.spec.ts(256,49): error TS2554: Expected 2 arguments, but got 1.
src/modules/policies/__tests__/policies.integration.spec.ts(265,49): error TS2339: Property 'findExpiring' does not exist on type 'PoliciesController'.
src/modules/policies/__tests__/policies.integration.spec.ts(274,49): error TS2339: Property 'findNeedsReview' does not exist on type 'PoliciesController'.
src/modules/policies/__tests__/policies.integration.spec.ts(283,49): error TS2554: Expected 2 arguments, but got 1.
src/modules/policies/__tests__/policies.integration.spec.ts(536,29): error TS2339: Property 'status' does not exist on type 'FindOptionsWhere<Policy> | FindOptionsWhere<Policy>[]'.
  Property 'status' does not exist on type 'FindOptionsWhere<Policy>[]'.
src/modules/policies/__tests__/policies.integration.spec.ts(537,71): error TS2339: Property 'status' does not exist on type 'FindOptionsWhere<Policy> | FindOptionsWhere<Policy>[]'.
  Property 'status' does not exist on type 'FindOptionsWhere<Policy>[]'.
src/modules/policies/__tests__/policies.integration.spec.ts(539,29): error TS2339: Property 'type' does not exist on type 'FindOptionsWhere<Policy> | FindOptionsWhere<Policy>[]'.
  Property 'type' does not exist on type 'FindOptionsWhere<Policy>[]'.
src/modules/policies/__tests__/policies.integration.spec.ts(540,69): error TS2339: Property 'type' does not exist on type 'FindOptionsWhere<Policy> | FindOptionsWhere<Policy>[]'.
  Property 'type' does not exist on type 'FindOptionsWhere<Policy>[]'.
src/modules/policies/__tests__/policies.integration.spec.ts(666,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; priority: PolicyPriority; ... 53 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; priority: PolicyPriority; ... 53 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(668,36): error TS2345: Argument of type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(721,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(735,36): error TS2345: Argument of type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(757,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<...>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(772,36): error TS2345: Argument of type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(807,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; ... 58 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(814,36): error TS2345: Argument of type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(858,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; ... 58 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(865,36): error TS2345: Argument of type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(887,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; ... 58 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(894,36): error TS2345: Argument of type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(929,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<...>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(941,36): error TS2345: Argument of type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(970,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; ... 58 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.integration.spec.ts(977,36): error TS2345: Argument of type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.security.spec.ts(286,13): error TS2739: Type '{ title: string; type: PolicyType.SECURITY; content: { sections: undefined[]; }; }' is missing the following properties from type 'CreatePolicyDto': priority, scope, effectiveDate, ownerName
src/modules/policies/__tests__/policies.security.spec.ts(326,21): error TS2339: Property 'canBeViewedBy' does not exist on type 'Policy'.
src/modules/policies/__tests__/policies.security.spec.ts(326,49): error TS2339: Property 'roles' does not exist on type '{ id: string; email: string; organizationId: string; }'.
src/modules/policies/__tests__/policies.security.spec.ts(341,24): error TS2554: Expected 2 arguments, but got 1.
src/modules/policies/__tests__/policies.security.spec.ts(542,9): error TS2322: Type '{ __proto__: { isAdmin: true; }; }' is not assignable to type '{ __proto__: { isAdmin: boolean; }; constructor?: undefined; prototype?: undefined; } | { constructor: { prototype: { isAdmin: boolean; }; }; __proto__?: undefined; prototype?: undefined; } | { prototype: { ...; }; __proto__?: undefined; constructor?: undefined; }'.
  Type '{ __proto__: { isAdmin: true; }; }' is not assignable to type '{ __proto__: { isAdmin: boolean; }; constructor?: undefined; prototype?: undefined; }'.
    Types of property 'constructor' are incompatible.
      Type 'Function' is not assignable to type 'undefined'.
src/modules/policies/__tests__/policies.security.spec.ts(544,9): error TS2322: Type '{ prototype: { isAdmin: true; }; }' is not assignable to type '{ __proto__: { isAdmin: boolean; }; constructor?: undefined; prototype?: undefined; } | { constructor: { prototype: { isAdmin: boolean; }; }; __proto__?: undefined; prototype?: undefined; } | { prototype: { ...; }; __proto__?: undefined; constructor?: undefined; }'.
  Type '{ prototype: { isAdmin: true; }; }' is not assignable to type '{ prototype: { isAdmin: boolean; }; __proto__?: undefined; constructor?: undefined; }'.
    Types of property 'constructor' are incompatible.
      Type 'Function' is not assignable to type 'undefined'.
src/modules/policies/__tests__/policies.security.spec.ts(630,39): error TS2554: Expected 3 arguments, but got 2.
src/modules/policies/__tests__/policies.service.integration.spec.ts(200,23): error TS2554: Expected 10 arguments, but got 6.
src/modules/policies/__tests__/policies.service.integration.spec.ts(224,51): error TS2345: Argument of type '{ organizationId: string; createdBy: string; title: string; description: string; type: PolicyType; priority: PolicyPriority; scope: PolicyScope; ... 7 more ...; keywords: string[]; }' is not assignable to parameter of type 'CreatePolicyDto'.
  Property 'ownerName' is missing in type '{ organizationId: string; createdBy: string; title: string; description: string; type: PolicyType; priority: PolicyPriority; scope: PolicyScope; ... 7 more ...; keywords: string[]; }' but required in type 'CreatePolicyDto'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(260,52): error TS2345: Argument of type '{ organizationId: string; createdBy: string; title: string; description: string; type: PolicyType; priority: PolicyPriority; scope: PolicyScope; ... 7 more ...; keywords: string[]; }' is not assignable to parameter of type 'CreatePolicyDto'.
  Property 'ownerName' is missing in type '{ organizationId: string; createdBy: string; title: string; description: string; type: PolicyType; priority: PolicyPriority; scope: PolicyScope; ... 7 more ...; keywords: string[]; }' but required in type 'CreatePolicyDto'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(269,52): error TS2345: Argument of type '{ title: string; organizationId: string; createdBy: string; description: string; type: PolicyType; priority: PolicyPriority; scope: PolicyScope; ... 7 more ...; keywords: string[]; }' is not assignable to parameter of type 'CreatePolicyDto'.
  Property 'ownerName' is missing in type '{ title: string; organizationId: string; createdBy: string; description: string; type: PolicyType; priority: PolicyPriority; scope: PolicyScope; ... 7 more ...; keywords: string[]; }' but required in type 'CreatePolicyDto'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(354,29): error TS2339: Property 'status' does not exist on type 'FindOptionsWhere<Policy> | FindOptionsWhere<Policy>[]'.
  Property 'status' does not exist on type 'FindOptionsWhere<Policy>[]'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(355,71): error TS2339: Property 'status' does not exist on type 'FindOptionsWhere<Policy> | FindOptionsWhere<Policy>[]'.
  Property 'status' does not exist on type 'FindOptionsWhere<Policy>[]'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(357,29): error TS2339: Property 'type' does not exist on type 'FindOptionsWhere<Policy> | FindOptionsWhere<Policy>[]'.
  Property 'type' does not exist on type 'FindOptionsWhere<Policy>[]'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(358,69): error TS2339: Property 'type' does not exist on type 'FindOptionsWhere<Policy> | FindOptionsWhere<Policy>[]'.
  Property 'type' does not exist on type 'FindOptionsWhere<Policy>[]'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(403,44): error TS2339: Property 'findExpiring' does not exist on type 'PoliciesService'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(410,44): error TS2339: Property 'findExpiring' does not exist on type 'PoliciesService'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(445,44): error TS2339: Property 'findNeedsReview' does not exist on type 'PoliciesService'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(473,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; priority: PolicyPriority; ... 53 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; priority: PolicyPriority; ... 53 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(475,36): error TS2345: Argument of type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ viewCount: number; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; status: PolicyStatus; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(540,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(554,36): error TS2345: Argument of type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 62 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(558,44): error TS2554: Expected 3 arguments, but got 2.
src/modules/policies/__tests__/policies.service.integration.spec.ts(582,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<...>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(597,36): error TS2345: Argument of type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ title: string; changeHistory: DeepPartial<{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }>[]; ... 61 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(601,29): error TS2554: Expected 3 arguments, but got 2.
src/modules/policies/__tests__/policies.service.integration.spec.ts(628,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; ... 58 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(635,36): error TS2345: Argument of type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ status: PolicyStatus; approvalDate: Date; approvedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(639,62): error TS2345: Argument of type '{ comments: string; }' is not assignable to parameter of type 'string'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(663,54): error TS2345: Argument of type '{}' is not assignable to parameter of type 'string'.
src/modules/policies/__tests__/policies.service.integration.spec.ts(682,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; ... 58 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(689,36): error TS2345: Argument of type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(693,44): error TS2554: Expected 2 arguments, but got 1.
src/modules/policies/__tests__/policies.service.integration.spec.ts(716,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; ... 58 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(723,36): error TS2345: Argument of type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ status: PolicyStatus; publishedDate: Date; publishedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(727,44): error TS2554: Expected 2 arguments, but got 1.
src/modules/policies/__tests__/policies.service.integration.spec.ts(754,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<...>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(766,36): error TS2345: Argument of type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ exceptions: ({ id?: string; description?: string; justification?: string; approvedBy?: string; approvalDate?: DeepPartial<Date>; expirationDate?: DeepPartial<Date>; conditions?: DeepPartial<...>; } | { ...; })[]; ... 62 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(770,44): error TS2554: Expected 3 arguments, but got 2.
src/modules/policies/__tests__/policies.service.integration.spec.ts(800,56): error TS2345: Argument of type '(policy: DeepPartial<Policy>) => Promise<{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; ... 58 more ...; controls?: Control[]; } | { ...; }>' is not assignable to parameter of type '(entity: DeepPartial<Policy>, options?: SaveOptions) => Promise<DeepPartial<Policy> & Policy>'.
  Type 'Promise<{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; } | { ...; }>' is not assignable to type 'Promise<DeepPartial<Policy> & Policy>'.
    Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; } | { ...; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
      Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type 'DeepPartial<Policy> & Policy'.
        Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; ... 55 more ...; controls?: Control[]; }' is not assignable to type '{ id?: string; title?: string; policyNumber?: string; version?: string; description?: string; purpose?: string; type?: DeepPartial<PolicyType>; status?: DeepPartial<PolicyStatus>; ... 66 more ...; canBeEditedBy?: DeepPartial<...>; } & Policy'.
          Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(807,36): error TS2345: Argument of type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; } | { ...; }' is not assignable to parameter of type 'Policy'.
  Type '{ status: PolicyStatus; archivedAt: Date; archivedBy: string; id: string; title: string; policyNumber: string; version: string; description?: string; purpose: string; type: PolicyType; ... 54 more ...; controls?: Control[]; }' is missing the following properties from type 'Policy': isActive, isExpiringSoon, needsReview, completionPercentage, and 7 more.
src/modules/policies/__tests__/policies.service.integration.spec.ts(811,29): error TS2554: Expected 2 arguments, but got 1.
src/modules/policies/__tests__/policies.service.spec.ts(197,13): error TS2341: Property 'sanitizePolicyContent' is private and only accessible within class 'PoliciesService'.
src/modules/policies/__tests__/policies.service.spec.ts(465,36): error TS2345: Argument of type '{ id: string; organizationId: string; }' is not assignable to parameter of type 'UserContext'.
  Property 'roles' is missing in type '{ id: string; organizationId: string; }' but required in type 'UserContext'.
src/modules/policies/__tests__/policies.workflow.spec.ts(472,35): error TS2339: Property 'status' does not exist on type '{ id: string; description: string; justification: string; approvedBy: string; approvalDate: Date; expirationDate?: Date; conditions?: string[]; }'.
src/modules/policies/__tests__/policies.workflow.spec.ts(545,67): error TS2339: Property 'complianceThreshold' does not exist on type 'Policy'.
src/modules/policies/__tests__/policies.workflow.spec.ts(558,22): error TS2339: Property 'count' does not exist on type '{ create: Mock<any, any, any>; save: Mock<any, any, any>; findOne: Mock<any, any, any>; find: Mock<any, any, any>; createQueryBuilder: Mock<any, any, any>; }'.
src/modules/policies/__tests__/policies.workflow.spec.ts(560,28): error TS2345: Argument of type '{ title: string; type: PolicyType.SECURITY; content: { sections: undefined[]; }; organizationId: string; createdBy: string; }' is not assignable to parameter of type 'CreatePolicyDto'.
  Type '{ title: string; type: PolicyType.SECURITY; content: { sections: undefined[]; }; organizationId: string; createdBy: string; }' is missing the following properties from type 'CreatePolicyDto': priority, scope, effectiveDate, ownerName
src/modules/policies/__tests__/policies.workflow.spec.ts(680,48): error TS2339: Property 'action' does not exist on type '{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; } | { ...; }'.
  Property 'action' does not exist on type '{ version: string; changedBy: string; changedAt: Date; changes: { summary: string; details?: Record<string, any>; sections?: string[]; }; approved?: boolean; approvedBy?: string; }'.
src/modules/policies/policies.service.ts(14,8): error TS2724: '"@soc-compliance/events"' has no exported member named 'PolicyApprovedEvent'. Did you mean 'PolicyArchivedEvent'?
src/modules/policies/policies.service.ts(16,8): error TS2305: Module '"@soc-compliance/events"' has no exported member 'PolicyCreatedEvent'.
src/modules/policies/policies.service.ts(21,8): error TS2305: Module '"@soc-compliance/events"' has no exported member 'PolicyUpdatedEvent'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(87,11): error TS2353: Object literal may only specify known properties, and 'classification' does not exist in type '{ id: string; type: string; attributes: Record<string, any>; }'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(92,9): error TS2741: Property 'timestamp' is missing in type '{ time: string; ipAddress: string; location: string; }' but required in type '{ [key: string]: any; timestamp: Date; ip?: string; location?: string; }'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(167,28): error TS2339: Property 'user' does not exist on type 'PolicyContext'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(186,39): error TS2353: Object literal may only specify known properties, and 'classification' does not exist in type '{ id: string; type: string; attributes: Record<string, any>; }'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(188,11): error TS2741: Property 'timestamp' is missing in type '{ time: string; }' but required in type '{ [key: string]: any; timestamp: Date; ip?: string; location?: string; }'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(214,41): error TS2353: Object literal may only specify known properties, and 'classification' does not exist in type '{ id: string; type: string; attributes: Record<string, any>; }'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(216,11): error TS2741: Property 'timestamp' is missing in type '{ time: string; }' but required in type '{ [key: string]: any; timestamp: Date; ip?: string; location?: string; }'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(232,23): error TS2339: Property 'overallDecision' does not exist on type 'PolicyEvaluationResult[]'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(496,23): error TS2339: Property 'auditTrail' does not exist on type 'Policy'.
src/modules/policy-engine/__tests__/policy-engine.controller.spec.ts(497,23): error TS2339: Property 'auditTrail' does not exist on type 'Policy'.
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(7,3): error TS2305: Module '"../../../../test/utils/test-helpers"' has no exported member 'TEST_OPA_POLICIES'.
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(78,9): error TS2353: Object literal may only specify known properties, and 'classification' does not exist in type '{ id: string; type: string; attributes: Record<string, any>; }'.
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(83,7): error TS2741: Property 'timestamp' is missing in type '{ time: string; ipAddress: string; location: string; }' but required in type '{ [key: string]: any; timestamp: Date; ip?: string; location?: string; }'.
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(169,32): error TS2352: Conversion of type '{ user: { id: string; }; }' to type 'PolicyContext' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ user: { id: string; }; }' is missing the following properties from type 'PolicyContext': subject, resource, action, environment
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(228,23): error TS2339: Property 'metadata' does not exist on type 'PolicyEvaluationResult[]'.
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(316,25): error TS2339: Property 'rules' does not exist on type 'PolicyRule'.
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(411,28): error TS2304: Cannot find name 'mockContext'.
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(453,52): error TS2304: Cannot find name 'mockContext'.
src/modules/policy-engine/__tests__/policy-engine.service.spec.ts(473,48): error TS2304: Cannot find name 'mockContext'.
src/modules/search/__tests__/search.service.spec.ts(127,33): error TS2345: Argument of type '{ id: string; title: string; description: string; category: string; version: string; content: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Policy'.
  Type '{ id: string; title: string; description: string; category: string; version: string; content: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Policy': policyNumber, purpose, type, status, and 25 more.
src/modules/search/__tests__/search.service.spec.ts(150,40): error TS2345: Argument of type '{ id: string; title: string; description: string; category: string; version: string; content: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Policy'.
  Type '{ id: string; title: string; description: string; category: string; version: string; content: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Policy': policyNumber, purpose, type, status, and 25 more.
src/modules/search/__tests__/search.service.spec.ts(163,33): error TS2345: Argument of type '{ content: string; id: string; title: string; description: string; category: string; version: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type 'Policy'.
  Type '{ content: string; id: string; title: string; description: string; category: string; version: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Policy': policyNumber, purpose, type, status, and 25 more.
src/modules/search/__tests__/search.service.spec.ts(207,20): error TS2353: Object literal may only specify known properties, and 'category' does not exist in type '{ type?: string[]; status?: string[]; organizationId?: string; frameworks?: string[]; tags?: string[]; dateRange?: { field: string; from?: Date; to?: Date; }; }'.
src/modules/search/__tests__/search.service.spec.ts(245,21): error TS2339: Property 'hits' does not exist on type 'SearchResult<any>'.
src/modules/search/__tests__/search.service.spec.ts(260,13): error TS2353: Object literal may only specify known properties, and 'gte' does not exist in type '{ field: string; from?: Date; to?: Date; }'.
src/modules/search/__tests__/search.service.spec.ts(305,36): error TS2339: Property 'searchFrameworks' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(347,21): error TS2339: Property 'searchControls' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(376,36): error TS2339: Property 'findSimilarControls' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(398,21): error TS2339: Property 'indexMapping' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(424,54): error TS2345: Argument of type '{ id: string; title: string; description: string; category: string; version: string; content: string; tags: string[]; createdAt: Date; updatedAt: Date; }[]' is not assignable to parameter of type 'Policy[]'.
  Type '{ id: string; title: string; description: string; category: string; version: string; content: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Policy': policyNumber, purpose, type, status, and 25 more.
src/modules/search/__tests__/search.service.spec.ts(453,9): error TS2740: Type '{ id: string; title: string; description: string; category: string; version: string; content: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Policy': policyNumber, purpose, type, status, and 25 more.
src/modules/search/__tests__/search.service.spec.ts(454,9): error TS2740: Type '{ id: string; title: string; description: string; category: string; version: string; content: string; tags: string[]; createdAt: Date; updatedAt: Date; }' is missing the following properties from type 'Policy': policyNumber, purpose, type, status, and 25 more.
src/modules/search/__tests__/search.service.spec.ts(457,21): error TS2339: Property 'success' does not exist on type 'void'.
src/modules/search/__tests__/search.service.spec.ts(458,21): error TS2339: Property 'failed' does not exist on type 'void'.
src/modules/search/__tests__/search.service.spec.ts(459,21): error TS2339: Property 'errors' does not exist on type 'void'.
src/modules/search/__tests__/search.service.spec.ts(469,21): error TS2339: Property 'removePolicy' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(487,28): error TS2339: Property 'removePolicy' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(516,11): error TS2353: Object literal may only specify known properties, and 'by_category' does not exist in type 'string[]'.
src/modules/search/__tests__/search.service.spec.ts(552,9): error TS2353: Object literal may only specify known properties, and 'suggest' does not exist in type 'PolicySearchOptions'.
src/modules/search/__tests__/search.service.spec.ts(555,21): error TS2339: Property 'suggestions' does not exist on type 'SearchResult<any>'.
src/modules/search/__tests__/search.service.spec.ts(556,21): error TS2339: Property 'suggestions' does not exist on type 'SearchResult<any>'.
src/modules/search/__tests__/search.service.spec.ts(569,21): error TS2339: Property 'ensureIndices' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(586,21): error TS2339: Property 'ensureIndices' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(596,21): error TS2339: Property 'refreshIndices' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(608,36): error TS2339: Property 'checkHealth' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(619,36): error TS2339: Property 'checkHealth' does not exist on type 'SearchService'.
src/modules/search/__tests__/search.service.spec.ts(641,36): error TS2339: Property 'analyzeText' does not exist on type 'SearchService'.
test/fixtures/test-data.ts(141,22): error TS2339: Property 'DATA_MANAGEMENT' does not exist on type 'typeof PolicyType'.
test/jest-setup.ts(6,1): error TS2322: Type 'typeof setImmediate | ((fn: any, ...args: any[]) => Timeout)' is not assignable to type 'typeof setImmediate'.
  Property '__promisify__' is missing in type '(fn: any, ...args: any[]) => NodeJS.Timeout' but required in type 'typeof setImmediate'.
test/jest-setup.ts(15,20): error TS2339: Property 'randomBytes' does not exist on type 'Crypto'.
test/jest-setup.ts(16,17): error TS2339: Property 'randomBytes' does not exist on type 'Crypto'.
