user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https: wss:; media-src 'self' https:; object-src 'none'; frame-src 'self' https:; base-uri 'self'; form-action 'self' https:; frame-ancestors 'none'; upgrade-insecure-requests;" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream configuration
    upstream kong_api {
        server kong:8443;
        keepalive 32;
    }

    upstream frontend_app {
        server frontend:3000;
        keepalive 32;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        listen [::]:80;
        server_name soc-platform.com *.soc-platform.com localhost *.localhost;
        
        # Allow Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main HTTPS server block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name soc-platform.com www.soc-platform.com app.soc-platform.com localhost;

        # SSL certificates
        ssl_certificate /etc/nginx/certificates/server-cert.pem;
        ssl_certificate_key /etc/nginx/certificates/server-key.pem;
        ssl_trusted_certificate /etc/nginx/certificates/ca-cert.pem;

        # DH parameters
        ssl_dhparam /etc/nginx/certificates/dhparam.pem;

        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 50;

        # Frontend application
        location / {
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # API subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.soc-platform.com api.localhost;

        # SSL certificates
        ssl_certificate /etc/nginx/certificates/server-cert.pem;
        ssl_certificate_key /etc/nginx/certificates/server-key.pem;
        ssl_trusted_certificate /etc/nginx/certificates/ca-cert.pem;

        # DH parameters
        ssl_dhparam /etc/nginx/certificates/dhparam.pem;

        # Rate limiting for API
        limit_req zone=api burst=50 nodelay;
        limit_conn addr 100;

        # API Gateway proxy
        location / {
            proxy_pass https://kong_api;
            proxy_http_version 1.1;
            proxy_ssl_verify off; # Only for local dev
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # Auth subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name auth.soc-platform.com auth.localhost;

        # SSL certificates
        ssl_certificate /etc/nginx/certificates/server-cert.pem;
        ssl_certificate_key /etc/nginx/certificates/server-key.pem;
        ssl_trusted_certificate /etc/nginx/certificates/ca-cert.pem;

        # DH parameters
        ssl_dhparam /etc/nginx/certificates/dhparam.pem;

        # Stricter rate limiting for auth
        limit_req zone=auth burst=10 nodelay;
        limit_conn addr 20;

        # Auth service proxy
        location / {
            proxy_pass https://kong_api/auth;
            proxy_http_version 1.1;
            proxy_ssl_verify off; # Only for local dev
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            proxy_buffering off;
            proxy_request_buffering off;
        }
    }

    # Block common attack patterns
    location ~ /\. {
        deny all;
        return 404;
    }

    location ~ /\.git {
        deny all;
        return 404;
    }

    location ~ /\.env {
        deny all;
        return 404;
    }

    # Block SQL injection attempts
    location ~* "(\'|\")(.*)(drop|insert|md5|select|union)" {
        deny all;
        return 403;
    }

    # Block file injection attempts
    location ~* "(\.)(bat|cmd|exe|dll|vbs|com|jar|scr)$" {
        deny all;
        return 403;
    }
}